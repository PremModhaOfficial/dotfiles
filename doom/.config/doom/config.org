* Config

** lexical!!
#+begin_src emacs-lisp

;;; $DOOMDIR/config.el -*- lexical-binding: t; -*-

#+end_src

*** docs
;; Place your private configuration here! Remember, you do not need to run 'doom
;; sync' after modifying this file!


;; Some functionality uses this to identify you, e.g. GPG configuration, email
;; clients, file templates and snippets. It is optional.

** User Info
#+begin_src emacs-lisp
(setq user-full-name "Prem Modha"
      user-mail-address "premmodhaofficial@gmail.com")
#+end_src

*** docs
;; Doom exposes five (optional) variables for controlling fonts in Doom:
;;
;; - `doom-font' -- the primary font to use
;; - `doom-variable-pitch-font' -- a non-monospace font (where applicable)
;; - `doom-big-font' -- used for `doom-big-font-mode'; use this for
;;   presentations or streaming.
;; - `doom-symbol-font' -- for symbols
;; - `doom-serif-font' -- for the `fixed-pitch-serif' face
;;
;; See 'C-h v doom-font' for documentation and more examples of what they
;; accept. For example:
;;
** Font
#+begin_src emacs-lisp
(setq doom-font (font-spec :family "Iosevka NF" :size 22 :weight 'regular :scalable 't)
     doom-variable-pitch-font (font-spec :family "JetBrainsMono Nerd Font Propo" :size 20))
#+end_src

*** docs
;;
;; full name: JetBrainsMono Nerd Font:pixelsize=16:foundry=JB:weight=regular:slant=normal:width=normal:spacing=100:scalable=true
;; file name: /usr/share/fonts/JetBrainsMono/JetBrainsMonoNerdFont-Regular.ttf
;; If you or Emacs can't find your font, use 'M-x describe-font' to look them
;; up, `M-x eval-region' to execute elisp code, and 'M-x doom/reload-font' to
;; refresh your font settings. If Emacs still can't find your font, it likely
;; wasn't installed correctly. Font issues are rarely Doom issues!

;; There are two ways to load a theme. Both assume the theme is installed and
;; available. You can either set `doom-theme' or manually load a theme with the
;; `load-theme' function. This is the default:
** Theme
#+begin_src emacs-lisp
;; (setq doom-theme 'doom-tokyo-night)
(use-package! spacemacs-theme
  :config
  (load-theme 'doom-feather-dark t))  ; Or 'spacemacs-light for the light variant
(setq shell-file-name (executable-find "zsh"))
#+end_src

*** docs
;; This determines the style of line numbers in effect. If set to `nil', line
;; numbers are disabled. For relative line numbers, set this to `relative'.
** Line Numbers
#+begin_src emacs-lisp
(setq display-line-numbers-type 'relative)
#+end_src

*** docs
;; If you use `org' and don't want your org files in the default location below,
;; change `org-directory'. It must be set before org loads!
** ORG - ROAM
#+begin_src emacs-lisp
(setq org-directory "~/org/")
(setq org-agenda-files '("~/org/roam/"))
(setq org-roam-completion-everywhere t)

(setq org-roam-capture-templates
      '(("d" "default" plain
         "%?"
         :target (file+head "%<%Y%m%d%H%M%S>-${slug}.org" "#+title: ${title}\n")
         :unnarrowed t)
        ("f" "fleating" plain
         (file "~/org/roam/templates/fleating.org")
         :target (file+head "%<%Y%m%d%H%M%S>-${slug}.org" "#+title: ${title}\n")
         :unnarrowed t)
        ("t" "daily" plain
         (file "~/org/roam/templates/todo-daily.org")
         :target (file+head "%<%Y%m%d%H%M%S>-${slug}.org" "#+title: ${title}\n")
         :unnarrowed t)
        )
      )

;; (print org-agenda-files)
#+end_src
** LSP

#+begin_src emacs-lisp
;; If using Corfu
(after! corfu
  (setq corfu-auto t                 ; Enable auto completion
        corfu-auto-delay 0.0         ; No delay for completion
        corfu-auto-prefix 1))        ; Complete after 1 character
#+end_src
** lookup in EWW

#+begin_src emacs-lisp
;; (setq +lookup-open-url-fn #'eww)
(setq! scroll-margin 30)
;; (setq! shell-file-name '/bin/zsh)
#+end_src

#+RESULTS:

** docs
*** docs
;; Whenever you reconfigure a package, make sure to wrap your config in an
;; `after!' block, otherwise Doom's defaults may override your settings. E.g.
;;
;;   (after! PACKAGE
;;     (setq x y))
;;
;; The exceptions to this rule:
;;
;;   - Setting file/directory variables (like `org-directory')
;;   - Setting variables which explicitly tell you to set them before their
;;     package is loaded (see 'C-h v VARIABLE' to look up their documentation).
;;   - Setting doom variables (which start with 'doom-' or '+').
;;
;; Here are some additional functions/macros that will help you configure Doom.
;;
;; - `load!' for loading external *.el files relative to this one
;; - `use-package!' for configuring packages
;; - `after!' for running code after a package has loaded
;; - `add-load-path!' for adding directories to the `load-path', relative to
;;   this file. Emacs searches the `load-path' when you load packages with
;;   `require' or `use-package'.
;; - `map!' for binding new keys
;;
;; To get information about any of these functions/macros, move the cursor over
;; the highlighted symbol at press 'K' (non-evil users must press 'C-c c k').
;; This will open documentation for it, including demos of how they are used.
;; Alternatively, use `C-h o' to look up a symbol (functions, variables, faces,
;; etc).
;;
;; You can also try 'gd' (or 'C-c c d') to jump to their definition and see how
;; they are implemented.
** Transparency
#+begin_src emacs-lisp
(set-frame-parameter nil 'alpha-background 69)
(add-to-list 'default-frame-alist '(alpha-background . 69))
#+end_src

** latex

#+begin_src emacs-lisp
(after! org
  (setq org-latex-compiler "xelatex"))  ;; Use XeLaTeX as default compiler

#+end_src

** Obsidian
#+begin_src emacs-lisp
(use-package! obsidian
  :ensure t
  :demand t
  :config
  (global-obsidian-mode t)
  :custom
  ;; This directory will be used for `obsidian-capture' if set.
  (obsidian-inbox-directory "Inbox")
  ;; Create missing files in inbox? - when clicking on a wiki link
  ;; t: in inbox, nil: next to the file with the link
  ;; default: t
  ;(obsidian-wiki-link-create-file-in-inbox nil)
  ;; The directory for daily notes (file name is YYYY-MM-DD.md)
  (obsidian-daily-notes-directory "Daily_Notes")
  ;; Directory of note templates, unset (nil) by default
  ;(obsidian-templates-directory "Templates")
  ;; Daily Note template name - requires a template directory. Default: Daily Note Template.md
  ;(obsidian-daily-note-template "Daily Note Template.md")
  :bind (:map obsidian-mode-map
  ;; Replace C-c C-o with Obsidian.el's implementation. It's ok to use another key binding.
  ("C-c C-o" . obsidian-follow-link-at-point)
  ;; Jump to backlinks
  ("C-c C-b" . obsidian-backlink-jump)
  ;; If you prefer you can use `obsidian-insert-link'
  ("C-c C-l" . obsidian-insert-wikilink)))
#+end_src

#+RESULTS:
: obsidian-insert-wikilink

* Theme Configuration

# ** Dark Pride Theme
# #+begin_src emacs-lisp
# ;; Set theme and related options
# (setq doom-theme 'dark-pride
#       doom-themes-enable-bold t    ; if nil, bold is disabled
#       doom-themes-enable-italic t) ; if nil, italics is disabled

# ;; Enable custom neotree theme (all-the-icons must be installed!)
# (after! doom-themes
#   (setq doom-themes-neotree-file-icons t)
#   (doom-themes-neotree-config))

# ;; Corrects (and improves) org-mode's native fontification
# (after! doom-themes
#   (doom-themes-org-config))

# ;; Set custom colors for specific faces
# (custom-set-faces!
#   '(default :background "#0d0d1b")
#   '(region :background "#002a3a" :foreground "#0d0f18")
#   '(cursor :background "#ff0017")
#   '(line-number :foreground "#789aba")
#   '(line-number-current-line :foreground "#cb6fa1" :weight bold))

# ;; Make comments and documentation italic
# (after! doom-themes
#   (set-face-attribute 'font-lock-comment-face nil :slant 'italic)
#   (set-face-attribute 'font-lock-doc-face nil :slant 'italic))

# ;; Set modeline colors
# (after! doom-modeline
#   (setq doom-modeline-height 25
#         doom-modeline-bar-width 3
#         doom-modeline-major-mode-icon t))

# ;; Enable rainbow delimiters
# (add-hook! 'prog-mode-hook #'rainbow-delimiters-mode)

# #+end_src
* Theme
# ** Dark Pride Theme Definition
# #+begin_src emacs-lisp
# (custom-theme-set-faces! 'doom-one
#   `(default :background "#0d0d1b" :foreground "#ccccce")
#   `(cursor :background "#ff0017")
#   `(region :background "#002a3a" :foreground "#0d0f18")
#   `(hl-line :background ,(doom-darken "#0d0d1b" 0.1))

#   ;; Basic colors
#   `(doom-color-black :foreground "#282828")
#   `(doom-color-red :foreground "#ca1444")
#   `(doom-color-green :foreground "#789aba")
#   `(doom-color-yellow :foreground "#b3879f")
#   `(doom-color-blue :foreground "#94469b")
#   `(doom-color-magenta :foreground "#cb6fa1")
#   `(doom-color-cyan :foreground "#fb6e93")
#   `(doom-color-white :foreground "#cf98c1")

#   ;; Bright colors
#   `(doom-color-bright-black :foreground "#98218e")
#   `(doom-color-bright-red :foreground "#cb515d")
#   `(doom-color-bright-green :foreground "#5a87b1")
#   `(doom-color-bright-yellow :foreground "#9c61ab")
#   `(doom-color-bright-blue :foreground "#9a77b1")
#   `(doom-color-bright-magenta :foreground "#f2a297")
#   `(doom-color-bright-cyan :foreground "#f4436f")
#   `(doom-color-bright-white :foreground "#ebdbb2"))

# ;; Apply syntax highlighting colors
# (custom-theme-set-faces! 'doom-one
#   `(font-lock-comment-face :foreground "#789aba" :slant italic)
#   `(font-lock-string-face :foreground "#cb6fa1")
#   `(font-lock-keyword-face :foreground "#94469b")
#   `(font-lock-function-name-face :foreground "#fb6e93")
#   `(font-lock-variable-name-face :foreground "#9a77b1")
#   `(font-lock-type-face :foreground "#f4436f")
#   `(font-lock-constant-face :foreground "#b3879f"))
# #+end_src

# ** Enable Theme
# #+begin_src emacs-lisp
# (setq doom-theme 'doom-one)  ; Use doom-one as base theme with our custom colors
# (doom-themes-org-config)     ; Improve org-mode native fontification
# #+end_src
* ER diag
